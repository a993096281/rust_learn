// Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data.
// You can define how you want your data to be structured.
// Details can be found in https://developers.google.com/protocol-buffers/docs/proto3.

// Once you have defined the message, the `build.rs` will generate the corresponding data structure in `OUT_DIR`.
// You can use the structure by importing the `msg` module.
// Example:
// use crate::msg::CommitRequest;

syntax = "proto3";

package msg;

message TimestampRequest {}

message TimestampResponse {
    uint64 timestamp = 1;
}

message GetRequest {
    uint64 start_ts = 1;
    bytes key = 2;
}

message GetResponse {
    bytes value = 1;
}

message PrewriteRequest {
    uint64 start_ts = 1;
    bytes w_key = 2;
    bytes w_value = 3;
    bytes primary_key = 4;
    bytes primary_value = 5;
}

message PrewriteResponse {}

message CommitRequest {
    bool is_primary = 1;
    uint64 start_ts = 2;
    uint64 commit_ts = 3;
    bytes write_key = 4;
    bytes write_value = 5;
}

message CommitResponse {}
